#------------------------
# Configuration file for dcmgr, metadata and collector.
#------------------------

# Database connection string
database_uri 'mysql2://localhost/wakame_dcmgr?user=root'
# AMQP broker to be connected.
amqp_server_uri 'amqp://localhost/'

# UUID for shared host pool or group.
default_shared_host_pool 'tag-shhost'

# UUID for shared network pool or group.
default_shared_network_pool 'tag-shnet'

# UUID for shared storage pool or group.
default_shared_storage_pool 'tag-shstor'

# system wide limit size in MB for creating new volume.
# (not affect at cloning from snapshot)
create_volume_max_size 3000
create_volume_min_size 10

# Default account quota limit
account_instance_total_weight 100.0
account_volume_total_size 100000 # 100GB

# 1.0 means that 100% of resources are reserved for stopped instances.
stopped_instance_usage_factor 1.0

# lists the instances which alives and died within RECENT_TERMED_PERIOD sec.
recent_terminated_instance_period 900

# mac address vendor_id
mac_address_vendor_id '525400'


service_type("std", "StdServiceType") {
  #
  # Scheduling Algorithms
  #
  # * host_node_scheduler
  # * storage_node_scheduler
  # * network_scheduler
  #

  # Available host node(hva) schedulers:
  #
  # * :ExcludeSame
  # * :FindFirst
  # * :LeastUsage
  # * :SpecifyNode
  #
  host_node_scheduler :LeastUsage

  # Available storage node(sta) schedulers:
  #
  # * :FindFirst
  # * :LeastUsage
  #
  storage_node_scheduler :LeastUsage

  # Available network schedulers:
  #
  # * :FlatSingle
  # * :NatOneToOne
  # * :VifTemplate
  # * :PerInstance
  #
  network_scheduler :PerInstance do

    # default network scheduler
    # assign IP address from first found network to single interface.
    default :FlatSingle

    # one internal address + NAT external address to single interface.
    add(:nat, :NatOneToOne) {
      # internal address
      network_id 'nw-demo1'
      # external address
      nat_network_id 'nw-demo2'
    }

    # multiple vnic: type1
    add(:vif3type1, :VifTemplate) {
      template({
        'eth0' => 'nw-demo1',
        'eth1' => 'nw-demo2',
        'eth2' => 'nw-demo3',
      })
    }
    
    # multiple vnic: type2
    add(:vif3type2, :VifTemplate) {
      template({
        'eth0' => 'nw-demo1',
        'eth1' => 'nw-demo4',
        'eth2' => 'nw-demo5',
      })
    }

    # vnet: physical and nw-demo6
    add(:vnet_1_6, :VifTemplate) {
      template({
        'eth0' => 'nw-demo1',
        'eth1' => 'nw-demo6',
      })
    }
    
    # vnet: physical and nw-demo7
    add(:vnet_1_7, :VifTemplate) {
      template({
        'eth0' => 'nw-demo1',
        'eth1' => 'nw-demo7',
      })
    }

    # vnet: nw-demo7
    add(:vnet_7, :VifTemplate) {
       template( {
         'eth0' => 'nw-demo7',
       })
    }
  end
}

service_type("lb", "LbServiceType") {
  image_id 'wmi-demolb'
  instance_spec_id 'is-demospec'
  host_node_id 'hn-demo1'
  security_group 'sg-demofgr'
  ssh_key_id 'ssh-demo'
  host_node_scheduler :LeastUsage
  storage_node_scheduler :LeastUsage
  network_scheduler :FlatSingle
}
